enum VersionCode {
  PL
  EN
  DE
  UK
  IT
  FR
  US
  NL
  ES
  RO
  RU
  GR
  TR
  CS
  CH
  PT
  BR
  HU
}

type Version {
  tag: VersionCode! @goField(forceResolver: true) @deprecated(reason: "Use `code`.")
  code: VersionCode!
  name: String!
  host: String!
  timezone: String!
}

input VersionFilter {
  tag: [VersionCode!] @deprecated(reason: "Use `code`.")
  tagNEQ: [VersionCode!] @deprecated(reason: "Use `codeNEQ`.")
  code: [VersionCode!]
  codeNEQ: [VersionCode!]

  host: [String!]
  hostNEQ: [String!]
  hostMATCH: String
  hostIEQ: String

  offset: Int
  limit: Int
  sort: String
}

type VersionList {
  items: [Version!]
  total: Int!
}

extend type Query {
  langVersions(filter: VersionFilter): VersionList! @deprecated(reason: "Use `versions`.")
  langVersion(tag: VersionCode!): Version @deprecated(reason: "Use `version`.")
  versions(filter: VersionFilter): VersionList!
  version(code: VersionCode!): Version
}
