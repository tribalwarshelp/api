enum VersionCode {
  PL
  pl
  EN
  en
  DE
  de
  UK
  uk
  IT
  it
  FR
  fr
  US
  us
  NL
  nl
  ES
  es
  RO
  ro
  RU
  ru
  GR
  gr
  TR
  tr
  CS
  cs
  CH
  ch
  PT
  pt
  BR
  br
  HU
  hu
  SK
  sk
}

type Version {
  code: VersionCode!
  name: String!
  host: String!
  timezone: String!
}

input VersionFilter {
  code: [VersionCode!]
  codeNEQ: [VersionCode!]

  host: [String!]
  hostNEQ: [String!]
  hostMATCH: String
  hostIEQ: String

  offset: Int
    @deprecated(
      reason: "Use a new variable added to the query versions - `offset`."
    )
  limit: Int
    @deprecated(
      reason: "Use a new variable added to the query versions - `limit`."
    )
  sort: String
    @deprecated(
      reason: "Use a new variable added to the query versions - `sort`."
    )
}

type VersionList {
  items: [Version!]
  total: Int!
}

extend type Query {
  versions(
    filter: VersionFilter
    limit: Int
    offset: Int
    sort: [String!]
  ): VersionList!
  version(code: VersionCode!): Version
}
