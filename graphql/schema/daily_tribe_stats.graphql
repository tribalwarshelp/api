type DailyTribeStatsRecord {
  tribe: Tribe @goField(forceResolver: true)
  members: Int!
  villages: Int!
  points: Int!
  allPoints: Int!
  rank: Int!
  rankAtt: Int!
  scoreAtt: Int!
  rankDef: Int!
  scoreDef: Int!
  rankTotal: Int!
  scoreTotal: Int!
  dominance: Float!
  createDate: Time!
}

type DailyTribeStats {
  total: Int!
  items: [DailyTribeStatsRecord!]
}

input DailyTribeStatsFilter {
  tribeID: [Int!]
  tribeIDNEQ: [Int!]
  tribeFilter: TribeFilter

  createDate: Time
  createDateGT: Time
  createDateGTE: Time
  createDateLT: Time
  createDateLTE: Time

  offset: Int @deprecated(reason: "Use a new variable added to the query dailyTribeStats - `offset`.")
  limit: Int @deprecated(reason: "Use a new variable added to the query dailyTribeStats - `limit`.")
  sort: String @deprecated(reason: "Use a new variable added to the query dailyTribeStats - `sort`.")
}

extend type Query {
  dailyTribeStats(
    server: String!
    filter: DailyTribeStatsFilter
    limit: Int
    offset: Int
    sort: [String!]
  ): DailyTribeStats!
}
