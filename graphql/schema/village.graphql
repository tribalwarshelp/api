type Village {
  id: Int!
  name: String!
  points: Int!
  x: Int!
  y: Int!
  bonus: Int!
  player: Player @goField(forceResolver: true)
}

type VillageList {
  items: [Village!]
  total: Int!
}

input VillageFilter {
  id: [Int!]
  idNEQ: [Int!]

  name: [String!]
  nameNEQ: [String!]
  nameMATCH: String
  nameIEQ: String

  points: Int
  pointsGT: Int
  pointsGTE: Int
  pointsLT: Int
  pointsLTE: Int

  xGT: Int
  xGTE: Int
  xLT: Int
  xLTE: Int
  yGT: Int
  yGTE: Int
  yLT: Int
  yLTE: Int
  xy: [String!]

  bonus: Int
  bonusGT: Int
  bonusGTE: Int
  bonusLT: Int
  bonusLTE: Int

  playerID: [Int!]
  playerFilter: PlayerFilter

  offset: Int
    @deprecated(
      reason: "Use a new variable added to the query versions - `offset`."
    )
  limit: Int
    @deprecated(
      reason: "Use a new variable added to the query versions - `limit`."
    )
  sort: String
    @deprecated(
      reason: "Use a new variable added to the query versions - `sort`."
    )
}

extend type Query {
  villages(
    server: String!
    filter: VillageFilter
    limit: Int
    offset: Int
    sort: [String!]
  ): VillageList!
  village(server: String!, id: Int!): Village
}
